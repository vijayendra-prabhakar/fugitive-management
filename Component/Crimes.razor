@using FugitiveManagement.Services
@using Microsoft.AspNetCore.Components
@using FugitiveManagement.Models
@inject CrimeService CrimeService

<h3>Crimes</h3>

<button class="btn btn-primary" @onclick="() => showForm = !showForm">Add Crime</button>

@if (showForm)
{
    <div class="row mt-4">
        <div class="col-md-6">
            <EditForm Model="newCrime" OnValidSubmit="AddCrime">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <label for="crimeName">Crime Name:</label>
                    <InputText id="crimeName" class="form-control" @bind-Value="newCrime.CrimeName" />
                </div>

                <button type="submit" class="btn btn-primary">Add Crime</button>
            </EditForm>
        </div>
    </div>
}

@if (crimes == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Crime Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var crime in crimes)
            {
                <tr>
                    <td>@crime.CrimeName</td>
                    <td>
                        <a href="/editcrime/@crime.Id">Edit</a>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteCrime(crime)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Crime> crimes;
    private bool showForm = false;
    private Crime newCrime = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        crimes = await CrimeService.GetCrimesAsync();
    }

    private async Task AddCrime()
    {
        await CrimeService.AddCrimeAsync(newCrime);
        newCrime = new Crime();
        showForm = false;
        await LoadData();
    }

    private async Task DeleteCrime(Crime crime)
    {
        await CrimeService.DeleteCrimeAsync(crime);
        await LoadData();
    }
}
